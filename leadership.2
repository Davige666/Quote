<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quote of the Day</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 20px;
        }
        #quote-box {
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background: #f9f9f9;
            width: 80%;
            max-width: 600px;
        }
        #quote {
            font-size: 1.5em;
            margin-bottom: 10px;
        }
        #author {
            font-size: 1.2em;
            color: #555;
        }
        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1em;
            border: none;
            border-radius: 5px;
            background: #007BFF;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background: #0056b3;
        }
    </style>
</head>
<body>
    <h1>Quote of the Day</h1>
    <div id="quote-box">
        <div id="quote">Loading...</div>
        <div id="author"></div>
    </div>
    <button onclick="nextQuote()">Next Quote</button>

    <script>
        let quotes = [];
        let currentIndex = 0;

        async function fetchQuotes() {
            try {
                const response = await fetch('https://docs.google.com/spreadsheets/d/18Ih4E-Fb_Kc6C7Gv57S369d-6J79-3-9muW976Sp_mg/edit?usp=sharing ');
                const data = await response.text();
                // Parse CSV
                const rows = data.split("\n");
                rows.forEach(row => {
                    const [text, author] = row.split(",");
                    if (text && author) {
                        quotes.push({ text: text.trim(), author: author.trim() });
                    }
                });
                // Load the first quote
                if (quotes.length > 0) {
                    displayQuote(0);
                } else {
                    document.getElementById("quote").textContent = "No quotes available.";
                }
            } catch (error) {
                document.getElementById("quote").textContent = "Error loading quotes.";
                console.error(error);
            }
        }

        function displayQuote(index) {
            const currentQuote = quotes[index];
            document.getElementById("quote").textContent = currentQuote.text;
            document.getElementById("author").textContent = `â€” ${currentQuote.author}`;
        }

        function nextQuote() {
            if (quotes.length === 0) return;
            currentIndex = (currentIndex + 1) % quotes.length;
            displayQuote(currentIndex);
        }

        // Fetch quotes on page load
        fetchQuotes();
    </script>
</body>
</html>
